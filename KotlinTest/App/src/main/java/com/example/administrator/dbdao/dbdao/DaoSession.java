package com.example.administrator.dbdao.dbdao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.administrator.kotlintest.entity.date.SearchHistory;
import com.example.administrator.kotlintest.entity.date.AccountData;
import com.example.administrator.kotlintest.entity.date.AreaSelectedHistoryData;
import com.example.administrator.kotlintest.entity.daoentity.Meizi;
import com.example.administrator.kotlintest.bridge.retrofit.callback.CookieResulte;

import com.example.administrator.dbdao.dbdao.SearchHistoryDao;
import com.example.administrator.dbdao.dbdao.AccountDataDao;
import com.example.administrator.dbdao.dbdao.AreaSelectedHistoryDataDao;
import com.example.administrator.dbdao.dbdao.MeiziDao;
import com.example.administrator.dbdao.dbdao.CookieResulteDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig searchHistoryDaoConfig;
    private final DaoConfig accountDataDaoConfig;
    private final DaoConfig areaSelectedHistoryDataDaoConfig;
    private final DaoConfig meiziDaoConfig;
    private final DaoConfig cookieResulteDaoConfig;

    private final SearchHistoryDao searchHistoryDao;
    private final AccountDataDao accountDataDao;
    private final AreaSelectedHistoryDataDao areaSelectedHistoryDataDao;
    private final MeiziDao meiziDao;
    private final CookieResulteDao cookieResulteDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        searchHistoryDaoConfig = daoConfigMap.get(SearchHistoryDao.class).clone();
        searchHistoryDaoConfig.initIdentityScope(type);

        accountDataDaoConfig = daoConfigMap.get(AccountDataDao.class).clone();
        accountDataDaoConfig.initIdentityScope(type);

        areaSelectedHistoryDataDaoConfig = daoConfigMap.get(AreaSelectedHistoryDataDao.class).clone();
        areaSelectedHistoryDataDaoConfig.initIdentityScope(type);

        meiziDaoConfig = daoConfigMap.get(MeiziDao.class).clone();
        meiziDaoConfig.initIdentityScope(type);

        cookieResulteDaoConfig = daoConfigMap.get(CookieResulteDao.class).clone();
        cookieResulteDaoConfig.initIdentityScope(type);

        searchHistoryDao = new SearchHistoryDao(searchHistoryDaoConfig, this);
        accountDataDao = new AccountDataDao(accountDataDaoConfig, this);
        areaSelectedHistoryDataDao = new AreaSelectedHistoryDataDao(areaSelectedHistoryDataDaoConfig, this);
        meiziDao = new MeiziDao(meiziDaoConfig, this);
        cookieResulteDao = new CookieResulteDao(cookieResulteDaoConfig, this);

        registerDao(SearchHistory.class, searchHistoryDao);
        registerDao(AccountData.class, accountDataDao);
        registerDao(AreaSelectedHistoryData.class, areaSelectedHistoryDataDao);
        registerDao(Meizi.class, meiziDao);
        registerDao(CookieResulte.class, cookieResulteDao);
    }
    
    public void clear() {
        searchHistoryDaoConfig.clearIdentityScope();
        accountDataDaoConfig.clearIdentityScope();
        areaSelectedHistoryDataDaoConfig.clearIdentityScope();
        meiziDaoConfig.clearIdentityScope();
        cookieResulteDaoConfig.clearIdentityScope();
    }

    public SearchHistoryDao getSearchHistoryDao() {
        return searchHistoryDao;
    }

    public AccountDataDao getAccountDataDao() {
        return accountDataDao;
    }

    public AreaSelectedHistoryDataDao getAreaSelectedHistoryDataDao() {
        return areaSelectedHistoryDataDao;
    }

    public MeiziDao getMeiziDao() {
        return meiziDao;
    }

    public CookieResulteDao getCookieResulteDao() {
        return cookieResulteDao;
    }

}
